{"version":3,"sources":["Components/Header.js","Components/Home.js","Components/Footer.js","Components/Details.js","Components/CustomersDetails.js","Components/Statements.js","Components/TransactionHistory.js","Components/TransferAmount.js","Components/CustomerStatements.js","Components/CustomerDetail.js","Components/About.js","App.js","index.js"],"names":["Header","useState","isActive","setIsActive","className","role","to","onClick","id","Home","src","alt","Footer","style","position","top","width","href","Details","props","customer","Account_No","e","setCurrentCustomer","target","dataset","acc","display","Profile","Account_Holder","Email_Id","Balance","CustomersDetails","justifyContent","loading","customersDetails","length","map","currentCustomer","_id","size","color","Statements","statements","Created_on","slice","Credited_by","Debated_to","Amount","TransactionHistory","setStatements","useEffect","filteredStatements","data","Status","a","transactionDetails","filter","filtered","transactions","TransferAmount","onSubmit","handleTransfer","error","from","value","onChange","setFrom","setTo","amount","type","placeholder","setAmount","CustomerStatements","CustomerDetail","setCustomer","filteredCustomer","parseInt","localStorage","getItem","Customers","FilterStatements","setItem","customerloading","setTransfer","About","App","setCustomersDetails","Customerloading","setCustomerLoading","transactionloading","setTransactionLoading","axios","get","console","log","fetchCustomersDetails","setTransactionDetails","transactionData","fetchTransactionDetails","count","setCount","errors","setError","preventDefault","process","document","querySelector","classList","add","put","transfer","status","message","post","remove","alert","exact","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8ad8eb07.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nexport const Header = () => {\r\n  const[isActive, setIsActive] = useState(false);\r\n  return (\r\n    <nav\r\n      className=\"navbar has-background-warning\"\r\n      role=\"navigation\"\r\n      aria-label=\"main navigation\"\r\n    >\r\n      <div className=\"navbar-brand\">\r\n        <Link className=\"navbar-item\" to=\"/\">\r\n          <h3 className=\"title\">Banking System</h3>\r\n        </Link>\r\n\r\n        <button\r\n          className={isActive ? \"navbar-burger is-active\" : \"navbar-burger\"}\r\n          aria-label=\"menu\"\r\n          aria-expanded=\"false\"\r\n          data-target=\"navigation-bar\"\r\n          onClick={() => setIsActive(!isActive)}\r\n        >\r\n          <span aria-hidden=\"true\"></span>\r\n          <span aria-hidden=\"true\"></span>\r\n          <span aria-hidden=\"true\"></span>\r\n        </button>\r\n      </div>\r\n\r\n      <div id=\"navigation-bar\" className={isActive ?\"navbar-menu is-active\":\"navbar-menu\"} onClick={() => setIsActive(false)}>\r\n        <div className=\"navbar-start\">\r\n          <Link className=\"navbar-item\" to=\"/\">\r\n            Home\r\n          </Link>\r\n\r\n          <Link className=\"navbar-item\" to=\"/customs-details\">\r\n            Customers Details\r\n          </Link>\r\n\r\n          <div className=\"navbar-item has-dropdown is-hoverable\">\r\n            <div className=\"navbar-link\">More</div>\r\n\r\n            <div className=\"navbar-dropdown\">\r\n            <Link className=\"navbar-item\" to=\"/transfer-amount\">Transfer Amount</Link>\r\n              <Link className=\"navbar-item\" to=\"/transaction-statements\">\r\n                Transaction History\r\n              </Link>\r\n              <hr className=\"navbar-divider\" />\r\n              <Link className=\"navbar-item\" to=\"/about\">About</Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport const Home = () => {\r\n  return (\r\n    <div className=\"columns notification m-2 mt-6 is-warning is-light is-centered is-vcentered is-box\">\r\n      <div className=\"column is-6 is-block mr-2\">\r\n        <p className=\"title is-size-3-touch is-size-1-desktop has-text-centered\">\r\n          Welcome to the Banking System\r\n        </p>\r\n        <hr className=\"has-background-warning\" />\r\n        <p className=\"content has-text-justified mt-6\">\r\n          Now using this Banking System you can just select a user and transfer\r\n          any number of credits to them by your choice. You can also view the\r\n          complete transaction history of all the users and the individuals.\r\n        </p>\r\n      </div>\r\n      <div className=\"column is-5 is-block mr-3\">\r\n        <figure className=\"image is-4by3\">\r\n          <img\r\n            className=\"has-ratio\"\r\n            src=\"https://images.unsplash.com/photo-1615818733733-8b2f0e3c403a?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\"\r\n            alt=\"Banking System\"\r\n          />\r\n        </figure>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nexport const Footer = () => {\r\n  const footerStyle = {\r\n    position: \"relative\",\r\n    top: \"16vh\",\r\n    width: \"100%\",\r\n  };\r\n\r\n  return (\r\n    <footer className=\"footer has-background-dark\" style={footerStyle}>\r\n      <div className=\"content has-text-centered has-text-white\">\r\n        <p>\r\n          <strong className=\"has-text-white\">Banking System</strong> created by{\" \"}\r\n          <a href=\"https://github.com/ankit1509\">Ankit Choudhary</a>.\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Details = (props) => {\r\n  return (\r\n    <>\r\n      <Link\r\n        to=\"/customer-details\"\r\n        className=\"column is-12 table my-0 is-hover\"\r\n        data-acc={props.customer.Account_No}\r\n        onClick={(e) => {\r\n          props.setCurrentCustomer(e.target.dataset.acc);\r\n        }}\r\n      >\r\n        <div\r\n          className=\"columns has-text-centered is-mobile p-0\"\r\n          data-acc={props.customer.Account_No}\r\n        >\r\n          <div\r\n            className=\"column is-3 px-0\"\r\n            data-acc={props.customer.Account_No}\r\n          >\r\n            <h3\r\n              className=\"title is-size-7-touch is-size-3-desktop mt-4\"\r\n              data-acc={props.customer.Account_No}\r\n            >\r\n              {props.customer.Account_No}\r\n            </h3>\r\n          </div>\r\n          <div\r\n            className=\"column is-3 px-0\"\r\n            data-acc={props.customer.Account_No}\r\n\r\n            style={{display: 'flex'}}\r\n          >\r\n            <figure className=\"image is-48x48 mx-1 is-hidden-desktop\" data-acc={props.customer.Account_No}>\r\n              <img\r\n                className=\"is-rounded\"\r\n                alt=\"Profile\"\r\n                src={props.customer.Profile}\r\n                data-acc={props.customer.Account_No}\r\n              />\r\n            </figure>\r\n            <figure className=\"image is-96x96 mx-1 is-hidden-touch\" data-acc={props.customer.Account_No}>\r\n              <img\r\n                className=\"is-rounded\"\r\n                alt=\"Profile\"\r\n                src={props.customer.Profile}\r\n                data-acc={props.customer.Account_No}\r\n              />\r\n            </figure>\r\n            <h3\r\n              className=\"title is-size-7-touch mt-4 ml-2 is-size-3-desktop\"\r\n              data-acc={props.customer.Account_No}\r\n            >\r\n              {props.customer.Account_Holder}\r\n            </h3>\r\n          </div>\r\n          <div\r\n            className=\"column is-3 px-0\"\r\n            data-acc={props.customer.Account_No}\r\n          >\r\n            <h3\r\n              className=\"title mt-4 is-size-7-touch is-size-3-desktop\"\r\n              data-acc={props.customer.Account_No}\r\n            >\r\n              {props.customer.Email_Id}\r\n            </h3>\r\n          </div>\r\n          <div\r\n            className=\"column is-3 px-0\"\r\n            data-acc={props.customer.Account_No}\r\n          >\r\n            <h3\r\n              className=\"title mt-4 is-size-7-touch is-size-3-desktop\"\r\n              data-acc={props.customer.Account_No}\r\n            >\r\n              ₹{props.customer.Balance}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n      <div className=\"column is-12 my-0 py-0\">\r\n        <hr className=\"has-background-dark\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BeatLoader } from \"react-spinners\";\r\nimport { Details } from \"./Details\";\r\nexport const CustomersDetails = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"mt-6 notification mx-2 is-success is-light title has-text-centered\">\r\n        Customers Details\r\n        <hr className=\"has-background-success\" />\r\n      </div>\r\n      <div className=\"columns notification is-light mx-2 is-mobile is-multiline\" style={{justifyContent: 'center'}}>\r\n        <div className=\"column is-12\">\r\n          <div className=\"columns notification has-text-centered is-mobile is-dark p-0\">\r\n            <div className=\"column is-3 px-0\">\r\n              <h3 className=\"title is-size-6-touch is-size-3-desktop\">\r\n                Account No.\r\n              </h3>\r\n            </div>\r\n            <div className=\"column is-3 px-0\">\r\n              <h3 className=\"title is-size-6-touch is-size-3-desktop\">\r\n                Account Holder Name\r\n              </h3>\r\n            </div>\r\n            <div className=\"column is-3 px-0\">\r\n              <h3 className=\"title is-size-6-touch is-size-3-desktop\">\r\n                Email-ID\r\n              </h3>\r\n            </div>\r\n            <div className=\"column is-3 px-0\">\r\n              <h3 className=\"title is-size-6-touch is-size-3-desktop\">\r\n                Balance\r\n              </h3>\r\n            </div>\r\n          </div>\r\n          <hr className=\"has-background-dark\" />\r\n          <hr className=\"has-background-dark\" />\r\n        </div>\r\n\r\n        {!props.loading ? (\r\n          <>\r\n            <BeatLoader size={72} color=\"orange\" loading />\r\n          </>\r\n        ):(\r\n          props.customersDetails.length === 0 ? (\r\n            <div className=\"has-background-danger column is-12 has-text-centered title is-size-6-touch is-size-4-desktop\">\r\n              {\" \"}\r\n              No Data to Display{\" \"}\r\n            </div>\r\n          ) : (\r\n            props.customersDetails.map((customer) => {\r\n              return <Details key={customer._id} customer={customer} setCurrentCustomer={props.setCurrentCustomer} currentCustomer={props.currentCustomer} />;\r\n            })\r\n          )\r\n        )}\r\n\r\n        \r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Statements = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"column is-12 table my-0\">\r\n        <div className=\"columns has-text-centered is-mobile p-0\">\r\n          <div className=\"column is-3\">\r\n            <h3 className=\"title is-size-7-touch is-size-3-desktop\">\r\n              {props.statements.Created_on.slice(0, 10)}\r\n            </h3>\r\n          </div>\r\n          <div className=\"column is-6\">\r\n            <h3 className=\"title is-size-7-touch is-size-3-desktop\">\r\n              Transferred to the account {props.statements.Credited_by} by the\r\n              account {props.statements.Debated_to}\r\n            </h3>\r\n          </div>\r\n          <div className=\"column is-3\">\r\n            <h3 className=\"title is-size-7-touch is-size-3-desktop\">\r\n              ₹{props.statements.Amount}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"column is-12 my-0 py-0\">\r\n        <hr className=\"has-background-dark\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Statements } from \"./Statements\";\r\nimport { BeatLoader } from \"react-spinners\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport const TransactionHistory = (props) => {\r\n    \r\n    const [statements, setStatements] = useState([]);\r\n\r\n    useEffect(() =>{\r\n\r\n        function filteredStatements(data){\r\n            return data.Status === \"Credited\"\r\n        }\r\n\r\n        async function Statements() {\r\n            var filtered = await props.transactionDetails.filter(filteredStatements);\r\n            setStatements(filtered)\r\n        }\r\n        Statements()\r\n    }, [props.transactionDetails]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mt-6 notification mx-2 is-success is-light title has-text-centered\">\r\n        Transactions History\r\n        <hr className=\"has-background-success\" />\r\n      </div>\r\n      <div className=\"columns notification is-light mx-2 is-mobile is-multiline\" style={{justifyContent: 'center'}}>\r\n        <div className=\"column is-12\">\r\n          <div className=\"columns notification has-text-centered is-mobile is-dark p-0\">\r\n            <div className=\"column is-3 px-0\">\r\n              <h3 className=\"title is-size-6-touch is-size-3-desktop\">Date</h3>\r\n            </div>\r\n            <div className=\"column is-6 px-0\">\r\n              <h3 className=\"title is-size-6-touch is-size-3-desktop\">\r\n                Description\r\n              </h3>\r\n            </div>\r\n            <div className=\"column is-3 px-0\">\r\n              <h3 className=\"title is-size-6-touch is-size-3-desktop\">Amount</h3>\r\n            </div>\r\n          </div>\r\n          <hr className=\"has-background-dark\" />\r\n          <hr className=\"has-background-dark\" />\r\n        </div>\r\n\r\n        {!props.loading ? (\r\n          <>\r\n            <BeatLoader loading color=\"orange\" size={72} />\r\n          </>\r\n        ):(\r\n          statements.length === 0 ? (\r\n            <div className=\"has-background-danger column is-12 has-text-centered title is-size-6-touch is-size-4-desktop\">\r\n              No Transaction Yet\r\n            </div>\r\n          ) : (\r\n            statements.map((transactions) => {\r\n              return <Statements key={transactions._id} statements={transactions} />\r\n            })\r\n          )\r\n        )}\r\n\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const TransferAmount = (props) => {\r\n  // console.log(props.error)\r\n  return (\r\n    <>\r\n      <div className=\"mt-6 notification mx-2 is-success is-light title has-text-centered\">\r\n        Transfer Amount\r\n        <hr className=\"has-background-success\" />\r\n      </div>\r\n\r\n      <div className=\"columns is-centered mx-2\">\r\n        <div className=\"column is-6 notification is-info is-light mt-6 \">\r\n          <form onSubmit={props.handleTransfer}>\r\n            <div className=\"field is-horizontal\">\r\n              <div className=\"field-label is-normal\">\r\n                <label className=\"label \">Transfer From : </label>\r\n              </div>\r\n              <div className=\"field-body\">\r\n                <div className=\"field is-narrow\">\r\n                  {props.error.from ? (\r\n                    <>\r\n                      <div className=\"control\">\r\n                        <div className=\"select is-fullwidth is-danger\">\r\n                          <select\r\n                            value={props.from}\r\n                            onChange={(e) => props.setFrom(e.target.value)}\r\n                          >\r\n                            <option value=\"Transfer From\">Transfer From</option>\r\n                            {props.customersDetails.map((customer) => (\r\n                              <option\r\n                                key={customer._id}\r\n                                value={customer.Account_No}\r\n                              >\r\n                                {customer.Account_Holder} ({customer.Account_No}\r\n                                )\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"help is-danger\">Invalid Input</p>\r\n                    </>\r\n                  ) : (\r\n                    <div className=\"control\">\r\n                      <div className=\"select is-fullwidth\">\r\n                        <select\r\n                          value={props.from}\r\n                          onChange={(e) => props.setFrom(e.target.value)}\r\n                        >\r\n                          <option value=\"Transfer From\">Transfer From</option>\r\n                          {props.customersDetails.map((customer) => (\r\n                            <option\r\n                              key={customer._id}\r\n                              value={customer.Account_No}\r\n                            >\r\n                              {customer.Account_Holder} ({customer.Account_No})\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field is-horizontal\">\r\n              <div className=\"field-label is-normal\">\r\n                <label className=\"label \">Transfer To : </label>\r\n              </div>\r\n              <div className=\"field-body\">\r\n                <div className=\"field is-narrow\">\r\n                  {props.error.to ? (\r\n                    <>\r\n                      <div className=\"control\">\r\n                        <div className=\"select is-fullwidth is-danger\">\r\n                          <select\r\n                            value={props.to}\r\n                            onChange={(e) => props.setTo(e.target.value)}\r\n                          >\r\n                            <option value=\"Transfer To\">Transfer To</option>\r\n                            {props.customersDetails.map((customer) => (\r\n                              <option\r\n                                key={customer._id}\r\n                                value={customer.Account_No}\r\n                              >\r\n                                {customer.Account_Holder} ({customer.Account_No}\r\n                                )\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                        </div>\r\n                      </div>\r\n                      <p className=\"help is-danger\">Invalid Input</p>\r\n                    </>\r\n                  ) : (\r\n                    <div className=\"control\">\r\n                      <div className=\"select is-fullwidth\">\r\n                        <select\r\n                          value={props.to}\r\n                          onChange={(e) => props.setTo(e.target.value)}\r\n                        >\r\n                          <option value=\"Transfer To\">Transfer To</option>\r\n                          {props.customersDetails.map((customer) => (\r\n                            <option\r\n                              key={customer._id}\r\n                              value={customer.Account_No}\r\n                            >\r\n                              {customer.Account_Holder} ({customer.Account_No})\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field is-horizontal\">\r\n              <div className=\"field-label is-normal\">\r\n                <label className=\"label\">Amount</label>\r\n              </div>\r\n              <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                  {props.error.amount ? (\r\n                    <>\r\n                      <div className=\"control\">\r\n                        <input\r\n                          className=\"input is-danger\"\r\n                          type=\"number\"\r\n                          placeholder=\"Enter Amount\"\r\n                          value={props.amount}\r\n                          onChange={(e) => props.setAmount(e.target.value)}\r\n                        />\r\n                      </div>\r\n                      <p className=\"help is-danger\">Invalid Input</p>\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <div className=\"control\">\r\n                        <input\r\n                          className=\"input\"\r\n                          type=\"number\"\r\n                          placeholder=\"Enter Amount\"\r\n                          value={props.amount}\r\n                          onChange={(e) => props.setAmount(e.target.value)}\r\n                        />\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"field is-horizontal\">\r\n              <div className=\"field-label\"></div>\r\n              <div className=\"field-body\">\r\n                <div className=\"field\">\r\n                  <div className=\"control\">\r\n                    <button className=\"button is-primary\" id=\"transfer\">\r\n                      Transfer\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CustomerStatements = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"column is-12 table my-0\">\r\n        <div className=\"columns has-text-centered is-mobile p-0\">\r\n          <div className=\"column is-3\">\r\n            <h3 className=\"title is-size-7-touch is-size-3-desktop\">\r\n              {props.statements.Created_on.slice(0, 10)}\r\n            </h3>\r\n          </div>\r\n          <div className=\"column is-3\">\r\n            {props.statements.Status === \"Credited\" ? (\r\n              <h3 className=\"title is-size-7-touch is-size-3-desktop\">\r\n                Transferred to the account {props.statements.Debated_to}\r\n              </h3>\r\n            ) : (\r\n              <h3 className=\"title is-size-7-touch is-size-3-desktop\">\r\n                Received from the account {props.statements.Debated_to}\r\n              </h3>\r\n            )}\r\n          </div>\r\n          <div className=\"column is-3\">\r\n            {props.statements.Status === \"Credited\" ? (\r\n              <h3 className=\"title is-size-7-touch is-size-3-desktop\">\r\n                ₹{props.statements.Amount}\r\n              </h3>\r\n            ) : (\r\n                <h3 className=\"title is-size-7-touch is-size-3-desktop\">\r\n                -\r\n              </h3>\r\n            )}\r\n          </div>\r\n          <div className=\"column is-3\">\r\n            \r\n          {props.statements.Status === \"Debited\" ? (\r\n              <h3 className=\"title is-size-7-touch is-size-3-desktop\">\r\n                ₹{props.statements.Amount}\r\n              </h3>\r\n            ) : (\r\n                <h3 className=\"title is-size-7-touch is-size-3-desktop\">\r\n                -\r\n              </h3>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"column is-12 my-0 py-0\">\r\n        <hr className=\"has-background-dark\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { CustomerStatements } from \"./CustomerStatements\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { BeatLoader } from \"react-spinners\";\r\n\r\n\r\nexport const CustomerDetail = (props) => {\r\n  // Customer Details\r\n  const [customer, setCustomer] = useState([]);\r\n\r\n  useEffect(() => {\r\n    function filteredCustomer(data) {\r\n      return (\r\n        parseInt(data.Account_No) === parseInt(localStorage.getItem(\"acc\"))\r\n      );\r\n    }\r\n\r\n    async function Customers() {\r\n      var filtered = await props.customersDetails.filter(filteredCustomer);\r\n      setCustomer(filtered);\r\n    }\r\n    Customers();\r\n  }, [props.customersDetails]);\r\n\r\n  // Transaction Statements\r\n  const [statements, setStatements] = useState([]);\r\n\r\n  useEffect(() => {\r\n    function FilterStatements(data) {\r\n      return (\r\n        parseInt(data.Credited_by) === parseInt(localStorage.getItem(\"acc\"))\r\n      );\r\n    }\r\n\r\n    async function Statements() {\r\n      var filteredStatements = await props.transactionDetails.filter(\r\n        FilterStatements\r\n      );\r\n      setStatements(filteredStatements);\r\n\r\n    }\r\n    Statements();\r\n  }, [props.transactionDetails]);\r\n\r\n  if (props.currentCustomer) {\r\n    localStorage.setItem(\"acc\", props.currentCustomer);\r\n  }\r\n  if (localStorage.getItem(\"acc\")) {\r\n    return (\r\n      <>\r\n        <div className=\"mt-6 notification mx-2 is-success is-light title has-text-centered\">\r\n          Customer Detail\r\n          <hr className=\"has-background-success\" />\r\n        </div>\r\n\r\n        <div className=\"columns is-centered is-touch\">\r\n          <div className=\"column is-6 is-full-mobile\">\r\n            <div className=\"notification mx-2 is-light title is-size-6-touch is-size-5-desktop has-text-left\">\r\n              {!props.customerloading ? (\r\n                  <BeatLoader loading color=\"orange\" size={48} />\r\n              ):(\r\n                customer.map((customer) => {\r\n                  return (\r\n                    \r\n                    <div key={customer._id}>\r\n                      <div className=\"columns is-centered\">\r\n                        <div className=\"column is-6 is-hidden-desktop\">\r\n                        <figure className=\"image is-128x128\">\r\n                          <img\r\n                            className=\"is-rounded\"\r\n                            alt=\"Profile\"\r\n                            src={customer.Profile}\r\n                          />\r\n                        </figure>\r\n                        </div>\r\n                        <div className=\"column is-6 is-hidden-touch\">\r\n                        <figure className=\"image is-256x256\">\r\n                          <img\r\n                            className=\"is-rounded\"\r\n                            alt=\"Profile\"\r\n                            src={customer.Profile}\r\n                          />\r\n                        </figure>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"m-2\">\r\n                        <b>Account Number :</b> {customer.Account_No}\r\n                      </div>\r\n                      <div className=\"m-2\">\r\n                        <b>Account Holder Name :</b> {customer.Account_Holder}\r\n                      </div>\r\n                      <div className=\"m-2\">\r\n                        <b> Account Holder Email :</b> {customer.Email_Id}\r\n                      </div>\r\n                      <div className=\"m-2\">\r\n                        <b> Account Balance : </b> ₹{customer.Balance}\r\n                      </div>\r\n                      <Link\r\n                        to=\"/transfer-amount\"\r\n                        className=\"button is-link is-fullwidth mt-4\"\r\n                        onClick={() =>\r\n                          props.setTransfer(parseInt(localStorage.getItem(\"acc\")))\r\n                        }\r\n                      >\r\n                        Transfer Amount\r\n                      </Link>\r\n                    </div>\r\n                  );\r\n                })\r\n                \r\n              )}\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"notification mx-2 is-info is-light title has-text-centered\">\r\n          Statements\r\n          <hr className=\"has-background-info\" />\r\n        </div>\r\n        <div className=\"columns mt-6 notification is-light mx-2 is-mobile is-multiline\" style={{justifyContent: 'center'}}>\r\n          <div className=\"column is-12\">\r\n            <div className=\"columns notification has-text-centered is-mobile is-dark p-0\">\r\n              <div className=\"column is-3 px-0\">\r\n                <h3 className=\"title is-size-6-touch is-size-3-desktop\">\r\n                  Date\r\n                </h3>\r\n              </div>\r\n              <div className=\"column is-3 px-0\">\r\n                <h3 className=\"title is-size-6-touch is-size-3-desktop\">\r\n                  Description\r\n                </h3>\r\n              </div>\r\n              <div className=\"column is-3 px-0\">\r\n                <h3 className=\"title is-size-6-touch is-size-3-desktop\">Cr.</h3>\r\n              </div>\r\n              <div className=\"column is-3 px-0\">\r\n                <h3 className=\"title is-size-6-touch is-size-3-desktop\">Dr.</h3>\r\n              </div>\r\n            </div>\r\n            <hr className=\"has-background-dark\" />\r\n            <hr className=\"has-background-dark\" />\r\n          </div>\r\n\r\n          {!props.loading ? (\r\n              <>\r\n              <BeatLoader loading color=\"orange\" size={72} />\r\n              </>\r\n            ):(\r\n              statements.length === 0 ? (\r\n                <div className=\"has-background-danger column is-12 has-text-centered title is-size-6-touch is-size-4-desktop\">\r\n                  No Transaction Yet\r\n                </div>\r\n              ) : (\r\n                statements.map((transactions) => {\r\n                  return (\r\n                    <CustomerStatements\r\n                      key={transactions._id}\r\n                      statements={transactions}\r\n                    />\r\n                  );\r\n                })\r\n              )\r\n            )}\r\n\r\n          \r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <>\r\n      <div className=\"columns notification m-2 mt-6 is-warning is-light is-centered is-vcentered is-box\">\r\n        <div className=\"column is-6 is-block mr-2\">\r\n          <p className=\"title is-size-3-touch is-size-1-desktop has-text-centered\">\r\n            Basic Banking System\r\n          </p>\r\n          <hr className=\"has-background-warning\" />\r\n          <p className=\"content has-text-justified mt-6\">\r\n            It's a simple dynamic website which has the following specs. which\r\n            do not have any login system and or any user creation but only\r\n            having transfer of money between multiple users.\r\n            <hr className=\"has-background-warning\" />\r\n            It' Work Flow is as follows: Home Page --{\">\"} View all Customers --{\">\"} Select and View one\r\n            Customer --{\">\"} Transfer Money --{\">\"} Select customer to transfer to --{\">\"} View\r\n            all Customers .\r\n          </p>\r\n        </div>\r\n        <div className=\"column is-5 is-block mr-3\">\r\n          <figure className=\"image is-4by3\">\r\n            <img\r\n              className=\"has-ratio\"\r\n              src=\"https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Nnx8YmFua3xlbnwwfHwwfHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1000&q=60\"\r\n              alt=\"Banking System\"\r\n            />\r\n          </figure>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import \"./App.css\";\r\nimport Header from \"./Components/Header\";\r\nimport Home from \"./Components/Home\";\r\nimport { Footer } from \"./Components/Footer.js\";\r\nimport { CustomersDetails } from \"./Components/CustomersDetails\";\r\nimport { TransactionHistory } from \"./Components/TransactionHistory\";\r\nimport { TransferAmount } from \"./Components/TransferAmount\";\r\nimport { CustomerDetail } from \"./Components/CustomerDetail\";\r\nimport { About } from \"./Components/About\";\r\nimport \"bulma/css/bulma.min.css\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  //customersDetails\r\n  const [customersDetails, setCustomersDetails] = useState([]);\r\n\r\n  // loader\r\n  const [Customerloading, setCustomerLoading] = useState(false);\r\n  const [transactionloading, setTransactionLoading] = useState(false);\r\n\r\n  //fetching the customersDetails\r\n  useEffect(() => {\r\n    async function fetchCustomersDetails() {\r\n      try {\r\n        const data = await axios.get(\"https://banking-server.herokuapp.com/customers\");\r\n        setCustomersDetails(data.data);\r\n        setCustomerLoading(true);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchCustomersDetails();\r\n  }, [customersDetails]);\r\n\r\n  //transactionDetails\r\n  const [transactionDetails, setTransactionDetails] = useState([]);\r\n\r\n  //fetching the transaction details\r\n  useEffect(() => {\r\n    async function fetchTransactionDetails() {\r\n      try {\r\n        const transactionData = await axios.get(\r\n          \"https://banking-server.herokuapp.com/transactions\"\r\n        );\r\n        setTransactionDetails(transactionData.data);\r\n        setTransactionLoading(true);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchTransactionDetails();\r\n  }, [transactionDetails]);\r\n\r\n  // transfer parameters\r\n  const [from, setFrom] = useState(\"Transfer From\");\r\n  const [to, setTo] = useState(\"Transfer To\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [count, setCount] = useState(0);\r\n\r\n  // transfer error parameters\r\n  const [errors, setError] = useState({});\r\n\r\n  useEffect(() => {\r\n    const data = {\r\n      from: parseInt(from),\r\n      to: parseInt(to),\r\n      amount: parseInt(amount),\r\n    };\r\n\r\n    if (count === 0) {\r\n      setError({\r\n        from: false,\r\n        to: false,\r\n        amount: false,\r\n      });\r\n    } else {\r\n      if (!data.from) {\r\n        if (!data.to) {\r\n          if (!data.amount || !(data.amount > 0)) {\r\n            const error = {\r\n              from: true,\r\n              to: true,\r\n              amount: true,\r\n            };\r\n            setError(error);\r\n          } else {\r\n            const error = {\r\n              from: true,\r\n              to: true,\r\n              amount: false,\r\n            };\r\n            setError(error);\r\n          }\r\n        } else {\r\n          if (!data.amount || !(data.amount > 0)) {\r\n            const error = {\r\n              from: true,\r\n              to: false,\r\n              amount: true,\r\n            };\r\n            setError(error);\r\n          } else {\r\n            const error = {\r\n              from: true,\r\n              to: false,\r\n              amount: false,\r\n            };\r\n            setError(error);\r\n          }\r\n        }\r\n      } else {\r\n        if (!data.to) {\r\n          if (!data.amount || !(data.amount > 0)) {\r\n            const error = {\r\n              from: false,\r\n              to: true,\r\n              amount: true,\r\n            };\r\n            setError(error);\r\n          } else {\r\n            const error = {\r\n              from: false,\r\n              to: true,\r\n              amount: false,\r\n            };\r\n            setError(error);\r\n          }\r\n        } else {\r\n          if (data.from === data.to) {\r\n            if (!data.amount || !(data.amount > 0)) {\r\n              const error = {\r\n                from: true,\r\n                to: true,\r\n                amount: true,\r\n              };\r\n              setError(error);\r\n            } else {\r\n              const error = {\r\n                from: true,\r\n                to: true,\r\n                amount: false,\r\n              };\r\n              setError(error);\r\n            }\r\n          } else {\r\n            if (!data.amount || !(data.amount > 0)) {\r\n              const error = {\r\n                from: false,\r\n                to: false,\r\n                amount: true,\r\n              };\r\n              setError(error);\r\n            } else {\r\n              const error = {\r\n                from: false,\r\n                to: false,\r\n                amount: false,\r\n              };\r\n              setError(error);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setCount(count + 1);\r\n  }, [from, to, amount]);\r\n\r\n\r\n  // Transfer event handler\r\n  const handleTransfer = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!errors.from && !errors.to && !errors.amount && to && from && amount) {\r\n      var process = document.querySelector(\"#transfer\");\r\n      process.classList.add(\"is-loading\");\r\n\r\n      const data = {\r\n        from: parseInt(from),\r\n        to: parseInt(to),\r\n        amount: parseInt(amount),\r\n      };\r\n\r\n      try {\r\n        const transfer = await axios.put(\r\n          `https://banking-server.herokuapp.com/customers/${data.from}&${data.to}`,\r\n          {\r\n            amount: data.amount,\r\n          }\r\n        );\r\n        if (transfer.status === 200 && !transfer.data.message) {\r\n          const response = await axios.post(\r\n        \"https://banking-server.herokuapp.com/transactions\",\r\n            data\r\n          );\r\n          if (response.status === 200) {\r\n            process.classList.remove(\"is-loading\");\r\n            alert(\" Transfer Done Successfully !!\");\r\n          } else {\r\n            process.classList.remove(\"is-loading\");\r\n            alert(\" Transfer Failed, Try again!!\");\r\n          }\r\n        } else {\r\n          process.classList.remove(\"is-loading\");\r\n          alert(transfer.data.message + \" !!\");\r\n        }\r\n      } catch (err) {\r\n        process.classList.remove(\"is-loading\");\r\n        alert(\" Internal Error occurred, Try again after few minutes!!\");\r\n      }\r\n    }\r\n    else{\r\n      alert(\"Invalid input. Please try!!\")\r\n    }\r\n\r\n    \r\n\r\n    setFrom(\"Transfer From\");\r\n    setTo(\"Transfer To\");\r\n    setAmount(\"\");\r\n    setCount(0);\r\n  };\r\n\r\n  // customer variables\r\n  const [currentCustomer, setCurrentCustomer] = useState(\"\");\r\n\r\n  // transfer state\r\n  const [transfer, setTransfer] = useState(\"Transfer From\");\r\n\r\n  useEffect(() => {\r\n    if (transfer !== \"Transfer From\") {\r\n      setFrom(transfer);\r\n    }\r\n  }, [transfer]);\r\n\r\n  return (\r\n    <>\r\n      <HashRouter>\r\n        <Header/>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route exact path=\"/customs-details\">\r\n            <CustomersDetails\r\n              customersDetails={customersDetails}\r\n              setCurrentCustomer={setCurrentCustomer}\r\n              currentCustomer={currentCustomer}\r\n              loading={Customerloading}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/transaction-statements\">\r\n            <TransactionHistory loading={transactionloading} transactionDetails={transactionDetails} />\r\n          </Route>\r\n          <Route exact path=\"/transfer-amount\">\r\n            <TransferAmount\r\n              customersDetails={customersDetails}\r\n              to={to}\r\n              from={from}\r\n              setTo={setTo}\r\n              setAmount={setAmount}\r\n              setFrom={setFrom}\r\n              amount={amount}\r\n              handleTransfer={handleTransfer}\r\n              error={errors}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/customer-details\">\r\n            <CustomerDetail\r\n              customersDetails={customersDetails}\r\n              currentCustomer={currentCustomer}\r\n              transactionDetails={transactionDetails}\r\n              setTransfer={setTransfer}\r\n              loading={transactionloading}\r\n              customerloading={Customerloading}\r\n            />\r\n          </Route>\r\n          <Route exact path=\"/about\">\r\n          <About/>\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n      </HashRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}